// <auto-generated />
using Lab4.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab4.DAL.Migrations
{
    [DbContext(typeof(IssuesContext))]
    [Migration("20230323022158_Add Image")]
    partial class AddImage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DeveloperTicket", b =>
                {
                    b.Property<int>("DevelopersId")
                        .HasColumnType("int");

                    b.Property<int>("TicketsId")
                        .HasColumnType("int");

                    b.HasKey("DevelopersId", "TicketsId");

                    b.HasIndex("TicketsId");

                    b.ToTable("DeveloperTicket");
                });

            modelBuilder.Entity("Lab4.DAL.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Automotive & Baby"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Beauty & Health"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Electronics"
                        });
                });

            modelBuilder.Entity("Lab4.DAL.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Developers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Freddie",
                            LastName = "Johnson"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Sophia",
                            LastName = "O'Keefe"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Angela",
                            LastName = "McClure"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Jamie",
                            LastName = "Berge"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Geoffrey",
                            LastName = "Abbott"
                        });
                });

            modelBuilder.Entity("Lab4.DAL.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 20,
                            DepartmentId = 1,
                            Description = "Harum hic impedit dolore voluptate placeat.",
                            Severity = 1,
                            Title = "in"
                        },
                        new
                        {
                            Id = 1,
                            DepartmentId = 2,
                            Description = "Rerum totam est quo possimus sunt sunt ad.",
                            Severity = 0,
                            Title = "id"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 3,
                            Description = "Id cumque explicabo beatae.",
                            Severity = 1,
                            Title = "dicta"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 3,
                            Description = "Consectetur beatae dolorem voluptates occaecati.",
                            Severity = 0,
                            Title = "eius"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 3,
                            Description = "Nulla est doloribus ut non aspernatur vero dolores.",
                            Severity = 2,
                            Title = "assumenda"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 2,
                            Description = "Et praesentium est ipsum eligendi rerum itaque voluptate quia.",
                            Severity = 1,
                            Title = "ex"
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 3,
                            Description = "Optio non debitis ut molestiae dolorem ad.",
                            Severity = 2,
                            Title = "velit"
                        },
                        new
                        {
                            Id = 7,
                            DepartmentId = 1,
                            Description = "Dolor quae iure quas error est.",
                            Severity = 2,
                            Title = "voluptas"
                        },
                        new
                        {
                            Id = 8,
                            DepartmentId = 2,
                            Description = "Iste molestiae aut inventore necessitatibus necessitatibus perspiciatis sit.",
                            Severity = 2,
                            Title = "recusandae"
                        },
                        new
                        {
                            Id = 9,
                            DepartmentId = 2,
                            Description = "Voluptas expedita placeat ad sint consequuntur.",
                            Severity = 0,
                            Title = "qui"
                        },
                        new
                        {
                            Id = 10,
                            DepartmentId = 1,
                            Description = "Voluptates qui sed aliquid laudantium in.",
                            Severity = 0,
                            Title = "autem"
                        },
                        new
                        {
                            Id = 11,
                            DepartmentId = 3,
                            Description = "Placeat non repellat qui libero.",
                            Severity = 1,
                            Title = "totam"
                        },
                        new
                        {
                            Id = 12,
                            DepartmentId = 3,
                            Description = "Debitis vero laborum asperiores deserunt nihil tempora quia.",
                            Severity = 2,
                            Title = "enim"
                        },
                        new
                        {
                            Id = 13,
                            DepartmentId = 1,
                            Description = "Voluptatibus a et natus ipsa at quis rem dolores.",
                            Severity = 0,
                            Title = "natus"
                        },
                        new
                        {
                            Id = 14,
                            DepartmentId = 1,
                            Description = "Dolorem qui animi sint ad facere ut ullam voluptatem repellendus.",
                            Severity = 1,
                            Title = "et"
                        },
                        new
                        {
                            Id = 15,
                            DepartmentId = 2,
                            Description = "Sint suscipit delectus accusamus distinctio earum aliquam.",
                            Severity = 2,
                            Title = "aut"
                        },
                        new
                        {
                            Id = 16,
                            DepartmentId = 2,
                            Description = "Et vel tempora.",
                            Severity = 0,
                            Title = "et"
                        },
                        new
                        {
                            Id = 17,
                            DepartmentId = 2,
                            Description = "Aut atque officiis numquam mollitia voluptas dolore.",
                            Severity = 1,
                            Title = "iusto"
                        },
                        new
                        {
                            Id = 18,
                            DepartmentId = 3,
                            Description = "Ipsum mollitia sit officiis sapiente natus.",
                            Severity = 2,
                            Title = "facere"
                        },
                        new
                        {
                            Id = 19,
                            DepartmentId = 1,
                            Description = "Inventore aut reprehenderit vitae ratione dolorum harum.",
                            Severity = 2,
                            Title = "recusandae"
                        });
                });

            modelBuilder.Entity("DeveloperTicket", b =>
                {
                    b.HasOne("Lab4.DAL.Developer", null)
                        .WithMany()
                        .HasForeignKey("DevelopersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab4.DAL.Ticket", null)
                        .WithMany()
                        .HasForeignKey("TicketsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lab4.DAL.Ticket", b =>
                {
                    b.HasOne("Lab4.DAL.Department", "Department")
                        .WithMany("Tickets")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Lab4.DAL.Department", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
